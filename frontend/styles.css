body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

#chessBoard {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: grid;
    grid-template-columns: repeat(8, 60px);
    grid-template-rows: repeat(8, 60px);
    gap: 0px 0px;
    justify-content: center;
    align-items: center;
    /* additional styling */
}

.cell {
    position: relative;
    width: 60px;
    height: 60px;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
}

.cell::after {
    content: attr(data-notation);
    /* Display the notation text */
    position: absolute;
    bottom: 5px;
    /* Adjust position as needed */
    right: 3px;
    /* Adjust position as needed */
    font-size: 10px;
    /* Adjust font size as needed */
    color: #000000;
    /* Adjust text color as needed */
}

.cell img {
    width: 55px;
    height: 55px;
}

.light {
    background-color: #f0d9b5;
}

.dark {
    background-color: #b58863;
}

.highlight {
    background-color: yellow;
}

.selected {
    background-color: rgb(255, 249, 195);
    /* Highlight for selected piece */

}

.origin-highlight {
    background-color: rgba(255, 255, 0, 0.3);
    /* Light yellow highlight */
}

.to-highlight {
    background-color: rgba(255, 255, 0, 0.3);
    /* Light green highlight */
}

@keyframes blink {
    0% {
        background-color: transparent;
    }

    50% {
        background-color: red;
    }

    100% {
        background-color: transparent;
    }
}

.captured-pieces-box {
    width: 370px;
    /* adjust as needed */
    height: 100px;
    /* adjust as needed */
    padding: 10px;
    color: white;
    /* White text color */
    border: none;
    border-radius: 8px;
    /* Slightly rounded corners for a modern look */
    transition: all 0.3s ease;
    /* Smooth transition for hover effects */
    background-color: rgb(0, 5, 54);
    /* Green background */
    background: linear-gradient(to right, #06254c, #072e61);
    /* Blue and black gradient */
    box-shadow: 2px 0px 5px rgba(0, 0, 0, 0.2);
    /* Add a subtle shadow for depth */
    animation: slideInLeft 1s forwards;
    /* Animation to slide in */

}

#chessContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
}

#white-captured-pieces {
    position: fixed;
    top: 100px;
    left: 10px;
}

#engineThinkingOverlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    z-index: 1000;
    /* High z-index to ensure it's on top */
}

#engineStatus {
    position: relative;
    display: flex;
    align-items: center;
    margin-bottom: 550px;
    margin-right: 300px;
    background-color: rgba(0, 0, 0, 0.8);
    box-shadow: 2px 0px 5px rgba(0, 0, 0, 0.2)
}

.engine-logo {
    width: 50px;
    /* Adjust size as needed */
    height: auto;
    margin-right: 10px;
    display: inline-block;
    vertical-align: middle;
}

.engine-name {
    font-size: 1.2em;
    margin-right: 10px;
    display: inline-block;
    vertical-align: middle;
    margin-left: 10px;
    color: white;
}

.thinking-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 1.5em;
}

.spinner {
    display: none;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    animation: spin 2s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

#forfeit {
    position: absolute;
    bottom: 10%;
    background-color: white;
    /* Normal state background */

    padding: 10px 20px;
    /* margin-right: 20px; Space between log out button and anything to its left */
    font-size: 1.2em;
    /* Larger font size for readability */
    color: white;
    /* White text color */
    border: none;
    border-radius: 8px;
    /* Slightly rounded corners for a modern look */
    cursor: pointer;
    transition: all 0.3s ease;
    /* Smooth transition for hover effects */
    background-color: rgb(0, 5, 54);
}

#forfeit:hover {
    background-color: #0D47A1;
    /* Darker blue on hover */
    color: white;
    /* Text color when button is clicked */
}

#black-captured-pieces {
    color: white;
    position: fixed;
    bottom: 30px;
    left: 10px;
}

#white-timer {
    margin-bottom: 20px;
    position: fixed;
    bottom: 90px;
    right: 180px;
    font-size: 1.2em;
    /* Larger font size for readability */
    color: white;
}

#black-timer {
    margin-bottom: 20px;
    position: fixed;
    top: 90px;
    right: 180px;
    font-size: 1.2em;
    /* Larger font size for readability */
    color: white;
}


.blinking {
    animation: blink 0.5s ease-in-out 0s 4 alternate;
}

footer.container-fluid.text-center {
    position: fixed;
    bottom: 0;
    right: 0;
    width: auto;
    margin-right: 10px;
    /* Optional: Adjust for right margin */
    font-size: 0.8em;
    /* Larger font size for readability */
    color: white;
}

.transparent-gif {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: none;
    z-index: 1000;
    /* Adjust z-index to be on top of other elements */
}

/* Modal container styles */
.lose-modal-container,
.draw-modal-container,
.win-modal-container {
    display: none;
    position: fixed;
    top: 25%;
    left: 0;
    width: 100%;
    height: 100%;
    /*background-color: rgba(0, 0, 0, 0.5);*/
    align-items: center;
    justify-content: center;
    display: none;
    z-index: 1000;
}

/* Modal content styles */
.modal-content {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    align-items: center;
    justify-content: center;
    text-align: center;
    animation: fadeIn 2s;
    /* Adjust the duration (2s = 2 seconds) */
    display: none;

    /* Centering and adjusting width */
    position: absolute;
    top: 25%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30%;
    /* Adjust the width as needed */
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    25% {
        opacity: 0.25;
    }

    50% {
        opacity: 0.5;
    }

    75% {
        opacity: 0.75;
    }

    to {
        opacity: 1;
    }
}